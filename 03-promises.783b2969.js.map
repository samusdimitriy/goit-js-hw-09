{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAoCpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CA3CbL,EAAKa,iBAAiB,UAAUC,IAC9BA,EAAMC,iBAEN,MAAQV,MAAAW,EAAKC,KAAEA,EAAIC,OAAEA,GAAWJ,EAAMK,OAAOC,SAC7C,IAAIC,EAAaC,OAAON,EAAMO,OAC9B,MAAMC,EAAYF,OAAOL,EAAKM,OACxBE,EAAcH,OAAOJ,EAAOK,OAElC,GAAIF,EAAa,GAAKG,EAAY,GAAKC,GAAe,EACpDC,EAAA5B,GAAS6B,OAAOC,QACd,yDAFJ,CAME,IAAK,IAAIC,EAAI,EAAGA,GAAKJ,EAAaI,IAChC1B,EAAc0B,EAAGR,GACdS,MAAK,EAAC1B,SAAEA,EAAQC,MAAEA,KACjBqB,EAAA5B,GAAS6B,OAAOI,QACd,uBAAqB3B,QAAiBC,SACrC2B,OAEJ,EAAO5B,WAAUC,WAChBqB,EAAA5B,GAAQ6B,OAACC,QAAO,sBACbxB,QAA8BC,SAIrCgB,GAAcG,EAIlBxB,EAAKiC,O,CAAO","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', event => {\n  event.preventDefault();\n\n  const { delay, step, amount } = event.target.elements;\n  let delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  if (delayValue < 0 || stepValue < 0 || amountValue <= 0) {\n    Notiflix.Notify.failure(\n      'Invalid input values. Please check and try again.'\n    );\n    return;\n  } else {\n    for (let i = 1; i <= amountValue; i++) {\n      createPromise(i, delayValue)\n        .then(({ position, delay }) =>\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${delay}ms`\n          )\n        )\n        .catch(({ position, delay }) =>\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${delay}ms`\n          )\n        );\n\n      delayValue += stepValue;\n    }\n  }\n\n  form.reset();\n});\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","delay1","step","amount","target","elements","delayValue","Number","value","stepValue","amountValue","$parcel$interopDefault","Notify","failure","i","then","success","catch","reset"],"version":3,"file":"03-promises.783b2969.js.map"}